file_path,long_name,start_line_new,end_line_new,start_line_old,end_line_old,line_num,mod_type,mod
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,19,"""added""","""import java.util.regex.Pattern;"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,36,"""added""","""  /**"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,37,"""added""","""   * Matches strings that contain {@code .} or {@code ..} as a complete path segment. This also"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,38,"""added""","""   * matches dots in their percent-encoded form, {@code %2E}."""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,39,"""added""","""   *"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,40,"""added""","""   * <p>It is okay to have these strings within a larger path segment (like {@code a..z} or {@code"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,41,"""added""","""   * index.html}) but when alone they have a special meaning. A single dot resolves to no path"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,42,"""added""","""   * segment so {@code /one/./three/} becomes {@code /one/three/}. A double-dot pops the preceding"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,43,"""added""","""   * directory, so {@code /one/../three/} becomes {@code /three/}."""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,44,"""added""","""   *"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,45,"""added""","""   * <p>We forbid these in Retrofit paths because they're likely to have the unintended effect."""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,46,"""added""","""   * For example, passing {@code ..} to {@code DELETE /account/book/{isbn}/} yields {@code DELETE"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,47,"""added""","""   * /account/}."""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,48,"""added""","""   */"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,49,"""added""","""  private static final Pattern PATH_TRAVERSAL = Pattern.compile(""(.*/)?(\\.|%2e|%2E){1,2}(/.*)?"");"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,50,"""added""",""""""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""""",-1,-1,-1,-1,94,"""deleted""","""    relativeUrl = relativeUrl.replace(""{"" + name + ""}"", canonicalizeForPath(value, encoded));"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,110,"""added""","""    String replacement = canonicalizeForPath(value, encoded);"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,111,"""added""","""    String newRelativeUrl = relativeUrl.replace(""{"" + name + ""}"", replacement);"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,112,"""added""","""    if (PATH_TRAVERSAL.matcher(newRelativeUrl).matches()) {"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,113,"""added""","""      throw new IllegalArgumentException("""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,114,"""added""","""          ""@Path parameters shouldn't perform path traversal ('.' or '..'): "" + value);"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,115,"""added""","""    }"""
"""retrofit/src/main/java/retrofit2/RequestBuilder.java""","""RequestBuilder::addPathParam( String name , String value , boolean encoded)""",105,117,89,95,116,"""added""","""    relativeUrl = newRelativeUrl;"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,881,"""added""","""  @Test public void pathParametersAndPathTraversal() {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,882,"""added""","""    class Example {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,883,"""added""","""      @GET(""/foo/bar/{ping}/"") //"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,884,"""added""","""      Call<ResponseBody> method(@Path(value = ""ping"") String ping) {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,885,"""added""","""        return null;"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,886,"""added""","""      }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,887,"""added""","""    }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,888,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,889,"""added""","""    assertMalformedRequest(Example.class, ""."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,890,"""added""","""    assertMalformedRequest(Example.class, "".."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,891,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,892,"""added""","""    assertThat(buildRequest(Example.class, ""./a"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,893,"""added""","""        .isEqualTo(""/foo/bar/.%2Fa/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,894,"""added""","""    assertThat(buildRequest(Example.class, ""a/."").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,895,"""added""","""        .isEqualTo(""/foo/bar/a%2F./"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,896,"""added""","""    assertThat(buildRequest(Example.class, ""a/.."").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,897,"""added""","""        .isEqualTo(""/foo/bar/a%2F../"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,898,"""added""","""    assertThat(buildRequest(Example.class, ""../a"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,899,"""added""","""        .isEqualTo(""/foo/bar/..%2Fa/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,900,"""added""","""    assertThat(buildRequest(Example.class, ""..\\.."").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,901,"""added""","""        .isEqualTo(""/foo/bar/..%5C../"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,902,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,903,"""added""","""    assertThat(buildRequest(Example.class, ""%2E"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,904,"""added""","""        .isEqualTo(""/foo/bar/%252E/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,905,"""added""","""    assertThat(buildRequest(Example.class, ""%2E%2E"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,906,"""added""","""        .isEqualTo(""/foo/bar/%252E%252E/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::pathParametersAndPathTraversal()""",881,907,-1,-1,907,"""added""","""  }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""""",-1,-1,-1,-1,908,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,909,"""added""","""  @Test public void encodedPathParametersAndPathTraversal() {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,910,"""added""","""    class Example {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,911,"""added""","""      @GET(""/foo/bar/{ping}/"") //"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,912,"""added""","""      Call<ResponseBody> method(@Path(value = ""ping"", encoded = true) String ping) {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,913,"""added""","""        return null;"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,914,"""added""","""      }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,915,"""added""","""    }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,916,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,917,"""added""","""    assertMalformedRequest(Example.class, ""."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,918,"""added""","""    assertMalformedRequest(Example.class, ""%2E"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,919,"""added""","""    assertMalformedRequest(Example.class, ""%2e"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,920,"""added""","""    assertMalformedRequest(Example.class, "".."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,921,"""added""","""    assertMalformedRequest(Example.class, ""%2E."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,922,"""added""","""    assertMalformedRequest(Example.class, ""%2e."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,923,"""added""","""    assertMalformedRequest(Example.class, "".%2E"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,924,"""added""","""    assertMalformedRequest(Example.class, "".%2e"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,925,"""added""","""    assertMalformedRequest(Example.class, ""%2E%2e"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,926,"""added""","""    assertMalformedRequest(Example.class, ""%2e%2E"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,927,"""added""","""    assertMalformedRequest(Example.class, ""./a"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,928,"""added""","""    assertMalformedRequest(Example.class, ""a/."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,929,"""added""","""    assertMalformedRequest(Example.class, ""../a"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,930,"""added""","""    assertMalformedRequest(Example.class, ""a/.."");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,931,"""added""","""    assertMalformedRequest(Example.class, ""a/../b"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,932,"""added""","""    assertMalformedRequest(Example.class, ""a/%2e%2E/b"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,933,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,934,"""added""","""    assertThat(buildRequest(Example.class, ""..."").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,935,"""added""","""        .isEqualTo(""/foo/bar/.../"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,936,"""added""","""    assertThat(buildRequest(Example.class, ""a..b"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,937,"""added""","""        .isEqualTo(""/foo/bar/a..b/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,938,"""added""","""    assertThat(buildRequest(Example.class, ""a.."").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,939,"""added""","""        .isEqualTo(""/foo/bar/a../"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,940,"""added""","""    assertThat(buildRequest(Example.class, ""a..b"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,941,"""added""","""        .isEqualTo(""/foo/bar/a..b/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,942,"""added""","""    assertThat(buildRequest(Example.class, ""..b"").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,943,"""added""","""        .isEqualTo(""/foo/bar/..b/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,944,"""added""","""    assertThat(buildRequest(Example.class, ""..\\.."").url().encodedPath())"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,945,"""added""","""        .isEqualTo(""/foo/bar/..%5C../"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::encodedPathParametersAndPathTraversal()""",909,946,-1,-1,946,"""added""","""  }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""""",-1,-1,-1,-1,947,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,948,"""added""","""  @Test public void dotDotsOkayWhenNotFullPathSegment() {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,949,"""added""","""    class Example {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,950,"""added""","""      @GET(""/foo{ping}bar/"") //"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,951,"""added""","""      Call<ResponseBody> method(@Path(value = ""ping"", encoded = true) String ping) {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,952,"""added""","""        return null;"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,953,"""added""","""      }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,954,"""added""","""    }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,955,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,956,"""added""","""    assertMalformedRequest(Example.class, ""/./"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,957,"""added""","""    assertMalformedRequest(Example.class, ""/../"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,958,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,959,"""added""","""    assertThat(buildRequest(Example.class, ""."").url().encodedPath()).isEqualTo(""/foo.bar/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,960,"""added""","""    assertThat(buildRequest(Example.class, "".."").url().encodedPath()).isEqualTo(""/foo..bar/"");"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::dotDotsOkayWhenNotFullPathSegment()""",948,961,-1,-1,961,"""added""","""  }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""""",-1,-1,-1,-1,962,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""""",-1,-1,-1,-1,2868,"""added""",""""""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2869,"""added""","""  static void assertMalformedRequest(Class<?> cls, Object... args) {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2870,"""added""","""    try {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2871,"""added""","""      Request request = buildRequest(cls, args);"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2872,"""added""","""      fail(""expected a malformed request but was "" + request);"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2873,"""added""","""    } catch (IllegalArgumentException expected) {"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2874,"""added""","""    }"""
"""retrofit/src/test/java/retrofit2/RequestFactoryTest.java""","""RequestFactoryTest::assertMalformedRequest( Class <?> cls , Object ... args)""",2869,2875,-1,-1,2875,"""added""","""  }"""

file_path,long_name,start_line_new,end_line_new,start_line_old,end_line_old,line_num,mod_type,mod
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,311,"""added""","""        // Make sure that the resolved path of the extracted file doesn't escape the destination directory"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,312,"""added""","""        String canonicalDirPath = dir.getCanonicalPath();"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,313,"""added""","""        String canonicalDestPath = f.getCanonicalPath();"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,314,"""added""",""""""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,315,"""added""","""        if ( !canonicalDestPath.startsWith( canonicalDirPath ) )"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,316,"""added""","""        {"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,317,"""added""","""            throw new ArchiverException( ""Entry is outside of the target directory ("" + entryName + "")"" );"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,318,"""added""","""        }"""
"""src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java""","""AbstractUnArchiver::extractFile( final File srcF , final File dir , final InputStream compressedInputStream , final String entryName , final Date entryDate , final boolean isDirectory , final Integer mode , String symlinkDestination)""",303,370,303,361,319,"""added""",""""""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,193,"""added""","""    public void testExtractingZipWithEntryOutsideDestDirThrowsException()"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,194,"""added""","""            throws Exception"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,195,"""added""","""    {"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,196,"""added""","""        Exception ex = null;"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,197,"""added""","""        String s = ""target/zip-unarchiver-slip-tests"";"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,198,"""added""","""        File testZip = new File( getBasedir(), ""src/test/zips/zip-slip.zip"" );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,199,"""added""","""        File outputDirectory = new File( getBasedir(), s );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,200,"""added""",""""""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,201,"""added""","""        FileUtils.deleteDirectory( outputDirectory );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,202,"""added""",""""""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,203,"""added""","""        try"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,204,"""added""","""        {"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,205,"""added""","""            ZipUnArchiver zu = getZipUnArchiver( testZip );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,206,"""added""","""            zu.extract( """", outputDirectory );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,207,"""added""","""        }"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,208,"""added""","""        catch ( Exception e )"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,209,"""added""","""        {"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,210,"""added""","""            ex = e;"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,211,"""added""","""        }"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,212,"""added""",""""""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,213,"""added""","""        assertNotNull( ex );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,214,"""added""","""        assertTrue( ex.getMessage().startsWith( ""Entry is outside of the target directory"" ) );"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""ZipUnArchiverTest::testExtractingZipWithEntryOutsideDestDirThrowsException()""",193,215,-1,-1,215,"""added""","""    }"""
"""src/test/java/org/codehaus/plexus/archiver/zip/ZipUnArchiverTest.java""","""""",-1,-1,-1,-1,216,"""added""",""""""
